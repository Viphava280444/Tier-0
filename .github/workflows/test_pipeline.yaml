# .github/workflows/vm-access.yml

name: Test Pipeline

on:
  # push:
  #   branches: [ "Pipeline" ]
  workflow_dispatch:          
    inputs:                  
      message:               
        description: 'URL to download with wget'
        required: true         
        default: 'https://example.com/file.zip'
      Patch:
        description: 'Choose one option to patch'
        required: true
        type: choice
        options:
        - 'Patch'
        - 'No Patch'
        default: 'No Patch'

jobs:
  access-to-virtual-machine:
    runs-on: ubuntu-latest
    
    steps:
    - name: Install tools
      run: sudo apt-get update && sudo apt-get install -y expect
    
    - name: Access to virtual machine
      env:
        SERVER1_HOST: ${{ secrets.SERVER1_HOST }}
        SERVER1_USER: ${{ secrets.SERVER1_USER }}
        SERVER1_PASS: ${{ secrets.SERVER1_PASS }}
        SERVER2_HOST: ${{ secrets.SERVER2_HOST }}
        SERVER2_USER: ${{ secrets.SERVER2_USER }}
        SERVER2_PASS: ${{ secrets.SERVER2_PASS }}
        WGET_URL: ${{ github.event.inputs.message }} 
      run: |
        # Method 1: Use expect to handle SSH password prompts
        expect << 'EOF'
        spawn ssh -o StrictHostKeyChecking=no $env(SERVER1_USER)@$env(SERVER1_HOST)
        expect "password:"
        send "$env(SERVER1_PASS)\r"
        expect "$ "
        send "ssh -o StrictHostKeyChecking=no $env(SERVER2_USER)@$env(SERVER2_HOST)\r"
        expect "password:"
        send "$env(SERVER2_PASS)\r"
        expect "$ "
        send "echo 'Connected to Server2' && hostname\r"
        expect "$ "
        send "alias\r"
        expect "$ "
        send "vocms0500\r"
        expect "$ "
        send "ll\r"
        expect "$ "
        send "cd ohm\r"
        expect "$ "
        send "wget '$env(WGET_URL)'\r"
        expect "$ "
        send "ll\r"
        expect "$ "
        EOF